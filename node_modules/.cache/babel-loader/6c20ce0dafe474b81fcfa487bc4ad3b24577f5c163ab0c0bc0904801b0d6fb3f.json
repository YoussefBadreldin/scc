{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nexport default {\n  name: 'PortfolioView',\n  setup() {\n    const pdfViewer = ref(null);\n    const scrollContainer = ref(null);\n    const error = ref(false);\n    const pdfUrl = '/images/rules.pdf'; // Path to your PDF file\n    let pdf = null;\n    let renderedPages = new Set();\n    let observer = null;\n    onMounted(() => {\n      if (!pdfViewer.value) return;\n\n      // Load PDF.js from CDN\n      const script = document.createElement('script');\n      script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.min.js';\n      script.onload = () => {\n        const pdfjsLib = window.pdfjsLib;\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js';\n        const loadingTask = pdfjsLib.getDocument(pdfUrl);\n        loadingTask.promise.then(loadedPdf => {\n          pdf = loadedPdf;\n          initializeObserver(); // Initialize lazy loading\n        }, reason => {\n          console.error(reason);\n          error.value = true;\n        });\n      };\n      document.head.appendChild(script);\n    });\n    const renderPage = pageNumber => {\n      if (!pdf || renderedPages.has(pageNumber)) return;\n      pdf.getPage(pageNumber).then(page => {\n        const viewport = page.getViewport({\n          scale: 1.5\n        }); // Adjust scale as needed\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        const devicePixelRatio = window.devicePixelRatio || 1;\n\n        // Set canvas dimensions for high quality\n        canvas.width = viewport.width * devicePixelRatio;\n        canvas.height = viewport.height * devicePixelRatio;\n        context.scale(devicePixelRatio, devicePixelRatio);\n\n        // Append canvas to viewer\n        pdfViewer.value.appendChild(canvas);\n        const renderContext = {\n          canvasContext: context,\n          viewport: viewport\n        };\n        page.render(renderContext).promise.then(() => {\n          console.log(`Page ${pageNumber} rendered`);\n          renderedPages.add(pageNumber); // Mark page as rendered\n        }).catch(renderError => {\n          console.error(`Error rendering page ${pageNumber}:`, renderError);\n          error.value = true;\n        });\n      }).catch(pageError => {\n        console.error(`Error fetching page ${pageNumber}:`, pageError);\n        error.value = true;\n      });\n    };\n    const initializeObserver = () => {\n      observer = new IntersectionObserver(handleIntersection, {\n        root: scrollContainer.value,\n        rootMargin: '0px',\n        threshold: 0.1 // Adjust this threshold to balance performance\n      });\n\n      // Add observer to each page placeholder (initially invisible)\n      for (let i = 1; i <= pdf.numPages; i++) {\n        const pagePlaceholder = document.createElement('div');\n        pagePlaceholder.setAttribute('data-page-number', i);\n        pagePlaceholder.style.height = '800px'; // Adjust based on page height\n        pagePlaceholder.style.width = '100%';\n        pdfViewer.value.appendChild(pagePlaceholder);\n        observer.observe(pagePlaceholder); // Observe each placeholder\n      }\n    };\n    const handleIntersection = entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const pageNumber = parseInt(entry.target.getAttribute('data-page-number'));\n          renderPage(pageNumber); // Render page when it is in view\n          observer.unobserve(entry.target); // Stop observing once the page is rendered\n          entry.target.remove(); // Remove placeholder after rendering\n        }\n      });\n    };\n    onBeforeUnmount(() => {\n      if (observer) {\n        observer.disconnect(); // Clean up observer when the component is destroyed\n      }\n    });\n    return {\n      pdfViewer,\n      scrollContainer,\n      error\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","name","setup","pdfViewer","scrollContainer","error","pdfUrl","pdf","renderedPages","Set","observer","value","script","document","createElement","src","onload","pdfjsLib","window","GlobalWorkerOptions","workerSrc","loadingTask","getDocument","promise","then","loadedPdf","initializeObserver","reason","console","head","appendChild","renderPage","pageNumber","has","getPage","page","viewport","getViewport","scale","canvas","context","getContext","devicePixelRatio","width","height","renderContext","canvasContext","render","log","add","catch","renderError","pageError","IntersectionObserver","handleIntersection","root","rootMargin","threshold","i","numPages","pagePlaceholder","setAttribute","style","observe","entries","forEach","entry","isIntersecting","parseInt","target","getAttribute","unobserve","remove","disconnect"],"sources":["C:\\Users\\Youssef Badreldin\\Documents\\GitHub\\AIUSU\\src\\views\\activities.vue"],"sourcesContent":["<template>\r\n  <div class=\"pdf-container\" ref=\"scrollContainer\">\r\n    <div ref=\"pdfViewer\" class=\"pdf-viewer\"></div>\r\n    <div v-if=\"error\" class=\"error-message\">Unable to load the PDF. Please check the file path or the PDF itself.</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\r\n\r\nexport default {\r\n  name: 'PortfolioView',\r\n  setup() {\r\n    const pdfViewer = ref(null);\r\n    const scrollContainer = ref(null);\r\n    const error = ref(false);\r\n    const pdfUrl = '/images/rules.pdf'; // Path to your PDF file\r\n    let pdf = null;\r\n    let renderedPages = new Set();\r\n    let observer = null;\r\n\r\n    onMounted(() => {\r\n      if (!pdfViewer.value) return;\r\n\r\n      // Load PDF.js from CDN\r\n      const script = document.createElement('script');\r\n      script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.min.js';\r\n      script.onload = () => {\r\n        const pdfjsLib = window.pdfjsLib;\r\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js';\r\n\r\n        const loadingTask = pdfjsLib.getDocument(pdfUrl);\r\n        loadingTask.promise.then(\r\n          loadedPdf => {\r\n            pdf = loadedPdf;\r\n            initializeObserver(); // Initialize lazy loading\r\n          },\r\n          reason => {\r\n            console.error(reason);\r\n            error.value = true;\r\n          }\r\n        );\r\n      };\r\n      document.head.appendChild(script);\r\n    });\r\n\r\n    const renderPage = (pageNumber) => {\r\n      if (!pdf || renderedPages.has(pageNumber)) return;\r\n\r\n      pdf.getPage(pageNumber).then(page => {\r\n        const viewport = page.getViewport({ scale: 1.5 }); // Adjust scale as needed\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        const devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n        // Set canvas dimensions for high quality\r\n        canvas.width = viewport.width * devicePixelRatio;\r\n        canvas.height = viewport.height * devicePixelRatio;\r\n        context.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n        // Append canvas to viewer\r\n        pdfViewer.value.appendChild(canvas);\r\n\r\n        const renderContext = {\r\n          canvasContext: context,\r\n          viewport: viewport,\r\n        };\r\n\r\n        page.render(renderContext).promise.then(() => {\r\n          console.log(`Page ${pageNumber} rendered`);\r\n          renderedPages.add(pageNumber); // Mark page as rendered\r\n        }).catch(renderError => {\r\n          console.error(`Error rendering page ${pageNumber}:`, renderError);\r\n          error.value = true;\r\n        });\r\n      }).catch(pageError => {\r\n        console.error(`Error fetching page ${pageNumber}:`, pageError);\r\n        error.value = true;\r\n      });\r\n    };\r\n\r\n    const initializeObserver = () => {\r\n      observer = new IntersectionObserver(handleIntersection, {\r\n        root: scrollContainer.value,\r\n        rootMargin: '0px',\r\n        threshold: 0.1, // Adjust this threshold to balance performance\r\n      });\r\n\r\n      // Add observer to each page placeholder (initially invisible)\r\n      for (let i = 1; i <= pdf.numPages; i++) {\r\n        const pagePlaceholder = document.createElement('div');\r\n        pagePlaceholder.setAttribute('data-page-number', i);\r\n        pagePlaceholder.style.height = '800px'; // Adjust based on page height\r\n        pagePlaceholder.style.width = '100%';\r\n        pdfViewer.value.appendChild(pagePlaceholder);\r\n        observer.observe(pagePlaceholder); // Observe each placeholder\r\n      }\r\n    };\r\n\r\n    const handleIntersection = (entries) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          const pageNumber = parseInt(entry.target.getAttribute('data-page-number'));\r\n          renderPage(pageNumber); // Render page when it is in view\r\n          observer.unobserve(entry.target); // Stop observing once the page is rendered\r\n          entry.target.remove(); // Remove placeholder after rendering\r\n        }\r\n      });\r\n    };\r\n\r\n    onBeforeUnmount(() => {\r\n      if (observer) {\r\n        observer.disconnect(); // Clean up observer when the component is destroyed\r\n      }\r\n    });\r\n\r\n    return {\r\n      pdfViewer,\r\n      scrollContainer,\r\n      error\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.pdf-container {\r\n  height: 100vh; /* Full height to take up the screen */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start; /* Align to start to allow scrolling */\r\n  position: relative;\r\n  overflow: auto; /* Allow scrolling if content exceeds viewport */\r\n}\r\n\r\n.pdf-viewer {\r\n  display: flex;\r\n  flex-direction: column; /* Stack pages vertically */\r\n  width: 100%;\r\n}\r\n\r\n.error-message {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: red;\r\n  text-align: center;\r\n  padding: 10px;\r\n  background: rgba(255, 255, 255, 0.8); /* Slight background to improve readability */\r\n  border-radius: 5px; /* Optional: add rounded corners for better look */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}